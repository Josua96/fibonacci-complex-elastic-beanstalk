version: '3'

services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    depends_on: # make nginx start once the client and the api were started
      - api
      - client
    restart: always # nginx must be always running even  if they are failures
    build: 
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis # docker will make sure to redirect request with redis as host to the ip of the redis service
      - REDIS_PORT=6379
      - PGUSER=postgres 
      - PGHOST=postgres  # docker will make sure to redirect request with postgres as host to the ip of the postgres service
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    stdin_open: true # to avoid getting a "React app exited with code 0" in the terminal when attempting to start up the application
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /home/node/app/node_modules # make sure node modules inside the container does not get overwritten by the node modules of the host machine
      - ./client:/home/node/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379


